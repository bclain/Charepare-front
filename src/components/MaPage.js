import React, { useState, useEffect } from 'react';
import useFetch from '../hooks/useFetch';
import DropZone from './DropZone';
import ButtonInput from './ButtonInput';
import Loader from './Loader';
import { useLocation, Link } from 'react-router-dom';



const MaPage = ({ userId, dataPage, newData, confirm }) => {
    const [getComp, setGetComp] = useState(false);
    const [submitData, setSubmitData] = useState(null);
    const [sendSubmit, setSendSubmit] = useState(false);    
    const [btnSave, setBtnSave] = useState(false);


    const [idPage, setIdPage] = useState(null);
    const { data: competences } = useFetch(`/competences?filters[prestataire_page][id][$eq]=${idPage}&populate=[Coiffeur_Coiffeuse][Barbier][Estheticienne_Estheticien][prothesiste_ongulaire]`, 'GET', null, true, getComp);
    const { data: soummission, loading, error } = useFetch(`/prestataire-pages/${idPage}`, 'Put', submitData, true, sendSubmit);
    const [formState, setFormState] = useState({
        nom: "", // Supposons que formState.nom correspond au nom dans JSON
        presentation: '', // À définir en fonction de votre logique
        gallerie: ["", ""], // À définir en fonction de votre logique
        profil: '',
        photo1: '',
        photo2: '',
        photo3: '',
        photo4: '',
        photo5: '', // À définir en fonction de votre logique
        data: '', // À définir en fonction de votre logique
        xp: 0, // À définir en fonction de votre logique
        Reseaux: {
            id: 0, // À définir en fonction de votre logique
            fb: '', // À définir en fonction de votre logique
            insta: '', // À définir en fonction de votre logique
            tiktok: '' // À définir en fonction de votre logique
        },
        users_permissions_user: '', // À définir en fonction de votre logique
        dispos: '', // À définir en fonction de votre logique
        notes: '', // À définir en fonction de votre logique
        prestations: '', // À définir en fonction de votre logique
        Ville: '' // À définir en fonction de votre logique
    });
    const [textLength, setTextLength] = useState(0); // Nouvel état pour la longueur du texte


    useEffect(() => {
        if (dataPage  && dataPage.attributes) {
            // Supposons que 'data' contient les champs directement
            setSendSubmit(false);
            setFormState(dataPage.attributes);
            setIdPage(dataPage.id);
            setTextLength(dataPage.attributes.presentation.length);
            confirm(false);
            setBtnSave(false);
        }
    }, [dataPage]);



    const handleRetour = () => {
        setBtnSave(false);
        setFormState(dataPage.attributes);
        setTextLength(dataPage.attributes.presentation.length);
        confirm(false);
    }

    useEffect(() => {
        if(soummission){
            newData(soummission)
        }
    }, [soummission]);

    useEffect(() => {
        if (idPage)
            setGetComp(true);
    }, [idPage]);

    useEffect(() => {
        if (submitData) {
            setSendSubmit(true);
        }

    }, [submitData]);


    const [errors, setErrors] = useState({});

    const handleInputChange = (e) => {
        const { name, value, type, checked } = e.target;
        if (name === 'presentation' && value.length > 700) return; // Limite à 300 caractères pour la présentation
        if (name === 'presentation') setTextLength(value.length); // Mise à jour de la longueur du texte
        if (name === "fb" || name === "insta" || name === "tiktok") {
            setFormState({
                ...formState,
                Reseaux: {
                    ...formState.Reseaux,
                    [name]: value
                }
            });
        } else {
            setFormState({
                ...formState,
                [name]: type === 'checkbox' ? checked : value
            });
        }
        confirm(true);
        setBtnSave(true);

    };


    const handleSubmit = async (e) => {
        e.preventDefault(); // Empêcher le rechargement de la page

        const formData = new FormData();
        const newdata = {};

        newdata.nom = formState.nom;
        newdata.presentation = formState.presentation;
        newdata.xp = formState.xp;
        newdata.Ville = formState.Ville;
        newdata.Pro = formState.Pro;

        // Vérifiez si formState.Reseaux existe et est un objet
        if (formState.Reseaux && typeof formState.Reseaux === 'object') {
            newdata.Reseaux = {}; // Initialisez newdata.Reseaux comme un objet
            newdata.Reseaux.id = formState.Reseaux.id;
            // Copiez ensuite les propriétés de formState.Reseaux dans newdata.Reseaux
            newdata.Reseaux.fb = formState.Reseaux.fb;
            newdata.Reseaux.insta = formState.Reseaux.insta;
            newdata.Reseaux.tiktok = formState.Reseaux.tiktok;
        }



        // Ajouter l'image de profil
        if (formState.profil && formState.profil.data && formState.profil.data.attributes.data instanceof Blob) { // Vérifier si c'est un Blob
            formData.append('files.profil', formState.profil.data.attributes.data, "profil");
        }

        // Ajouter l'image de photo...
        if (formState.profil && formState.photo1.data && formState.photo1.data.attributes.data instanceof Blob) { // Vérifier si c'est un Blob
            formData.append('files.photo1', formState.photo1.data.attributes.data, "photo1");
        }

        // Ajouter l'image de photo...
        if (formState.profil && formState.photo2.data && formState.photo2.data.attributes.data instanceof Blob) { // Vérifier si c'est un Blob
            formData.append('files.photo2', formState.photo2.data.attributes.data, "photo2");
        }
        // Ajouter l'image de photo...
        if (formState.profil && formState.photo3.data && formState.photo3.data.attributes.data instanceof Blob) { // Vérifier si c'est un Blob
            formData.append('files.photo3', formState.photo3.data.attributes.data, "photo3");
        }
        // Ajouter l'image de photo...
        if (formState.profil && formState.photo4.data && formState.photo4.data.attributes.data instanceof Blob) { // Vérifier si c'est un Blob
            formData.append('files.photo4', formState.photo4.data.attributes.data, "photo4");
        }

        // Ajouter l'image de photo...
        if (formState.profil && formState.photo5.data && formState.photo5.data.attributes.data instanceof Blob) { // Vérifier si c'est un Blob
            formData.append('files.photo5', formState.photo5.data.attributes.data, "photo5");
        }



        formData.append('data', JSON.stringify(newdata));

        setSubmitData(formData);

    };

    const handleImageDrop = (files, filename) => {
        const file = files[0];
        console.log(files);
        const imagePreviewUrl = URL.createObjectURL(file);

        setFormState(prevState => {
            // Vérifier si la propriété et ses sous-propriétés existent
            const newData = prevState[filename] && prevState[filename].data
                ? { ...prevState[filename].data }
                : { attributes: {} };

            // Mettre à jour les attributs
            newData.attributes = {
                ...newData.attributes,
                url: imagePreviewUrl, // Mettre à jour l'URL
                data: file, // Mettre à jour le fichier
                // Autres attributs si nécessaire
            };

            return {
                ...prevState,
                [filename]: { data: newData }
            };
        });
    };

    const getImageUrl = (imageUrl) => {
        // Si l'image est une URL de prévisualisation (commence par 'blob:'), utilisez-la directement
        if (imageUrl && imageUrl.startsWith('blob:')) {
            return imageUrl;
        }
        // Sinon, utilisez l'URL du serveur
        return process.env.REACT_APP_UPLOAD_URL + imageUrl;
    };

    
    const navigatecardlink = (id) =>{
        console.log(id);
        //navigate(`/pro/professionnel/${id}`);
    }


    return (
        <div className='flex-h mapage'>
            <div className="center">
            
                {formState && formState.nom ?

                    <form action="">

                        <div className="left">
                            <div className="form-group">
                                <label htmlFor="nom">Nom Affiché</label>
                                <input
                                    type="text"
                                    className="inputs"
                                    name="nom"
                                    value={formState.nom}
                                    onChange={handleInputChange}
                                    placeholder="Nom"
                                />
                                {errors.nom && <p className="error">{errors.nom}</p>}
                            </div>
                            <div className="form-group">
                                <label htmlFor="nom">Présentation</label>
                                <textarea
                                    type="text"
                                    className="inputs"
                                    name="presentation"
                                    value={formState.presentation}
                                    onChange={handleInputChange}
                                    placeholder="Nom"
                                    maxLength="400"
                                />
                                <p>{textLength} / 400 caractères</p> {/* Affichage de la longueur du texte */}
                                {errors.presentation && <p className="error">{errors.presentation}</p>}
                            </div>
                            <div className="form-group">
                                <h5 htmlFor="nom">Compétences</h5>

                                <div className="profe">

                                    {(competences && competences[0] && competences[0].attributes.Barbier) && (
                                        <div className="item">
                                            <svg viewBox="0 0 34 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <g clip-path="url(#clip0_365_7384)">
                                                    <path d="M0.373685 10.4917C0.160798 10.3854 0.0470046 10.1686 0.119507 10.0121C0.190237 9.85257 0.416703 9.81188 0.631362 9.9213L30.2089 24.9485C30.419 25.0565 30.5356 25.2716 30.4631 25.4281C30.3924 25.5877 30.1631 25.63 29.953 25.522L0.373685 10.4917Z" fill="#006963" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M0.418985 10.4026L29.9983 25.4328C30.0862 25.478 30.1741 25.4896 30.2422 25.477C30.3098 25.4646 30.3526 25.4307 30.3717 25.3876L30.3724 25.3861C30.3917 25.3443 30.39 25.2852 30.3538 25.2172C30.3178 25.1498 30.2517 25.083 30.1633 25.0375C30.1633 25.0375 30.1634 25.0375 30.1633 25.0375L0.586067 10.0105C0.495079 9.96407 0.406691 9.95224 0.338998 9.9643C0.272135 9.97621 0.230073 10.0095 0.210927 10.0527L0.210254 10.0542C0.190652 10.0965 0.192156 10.1562 0.227991 10.224C0.263508 10.2912 0.329789 10.358 0.418985 10.4026ZM30.2089 24.9485C30.419 25.0565 30.5356 25.2716 30.4631 25.4281C30.3924 25.5877 30.1631 25.63 29.953 25.522L0.373685 10.4917C0.160798 10.3854 0.0470046 10.1686 0.119507 10.0121C0.190237 9.85257 0.416703 9.81188 0.631362 9.9213L30.2089 24.9485Z" fill="black" />
                                                    <path d="M16.1094 20.4879C15.4434 20.1478 15.4541 19.5234 15.7359 18.8899C16.0206 18.2548 16.467 17.8537 17.1358 18.1922L30.3031 24.8816C30.9691 25.2217 30.9584 25.8461 30.6766 26.4796C30.3919 27.1147 29.9455 27.5157 29.2767 27.1773L16.1076 20.4848L16.1094 20.4879Z" fill="#F4F8FA" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M29.2767 27.1773C29.9455 27.5157 30.3919 27.1147 30.6766 26.4796C30.9584 25.8461 30.9691 25.2217 30.3031 24.8816L17.1358 18.1922C16.467 17.8537 16.0206 18.2548 15.7359 18.8899C15.482 19.4606 15.4482 20.0238 15.9308 20.3786C15.9829 20.4169 16.0411 20.4527 16.1056 20.4859C16.106 20.4861 16.1064 20.4863 16.1067 20.4865C16.1076 20.487 16.1085 20.4874 16.1094 20.4879L16.1076 20.4848L29.2767 27.1773ZM16.0937 20.3655L29.3218 27.0881C29.6306 27.2443 29.8726 27.2248 30.0695 27.1076C30.2744 26.9857 30.4464 26.7487 30.5853 26.4387C30.7224 26.1304 30.7875 25.837 30.7466 25.5867C30.7068 25.3431 30.5649 25.1276 30.2577 24.9707C30.2577 24.9707 30.2577 24.9707 30.2577 24.9707L17.0907 18.2814C17.0906 18.2814 17.0907 18.2815 17.0907 18.2814C16.782 18.1253 16.5399 18.1447 16.343 18.2619C16.1381 18.3838 15.9662 18.6207 15.8272 18.9307C15.6901 19.239 15.625 19.5324 15.6659 19.7828C15.7029 20.0096 15.8285 20.2121 16.0937 20.3655Z" fill="black" />
                                                    <path d="M16.7868 18.8602L29.9588 25.5511C30.5431 25.8482 30.6081 26.3675 30.4207 26.9219C30.5184 26.7959 30.6037 26.6484 30.6783 26.4825C30.9602 25.849 30.9708 25.2246 30.3049 24.8845L17.1376 18.1951C16.4716 17.855 16.0224 18.2577 15.7377 18.8928C15.7028 18.9702 15.6737 19.0444 15.6491 19.12C15.9237 18.769 16.2979 18.6103 16.7886 18.8633L16.7868 18.8602Z" fill="#DFE2E8" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M16.5318 18.6185L30.004 25.4619C30.3179 25.6215 30.5011 25.8465 30.5755 26.1131C30.5995 26.1992 30.6117 26.2881 30.614 26.379C30.7325 26.0937 30.7864 25.823 30.7483 25.5896C30.7086 25.346 30.5667 25.1306 30.2596 24.9737M30.2596 24.9737L17.0923 18.2843C16.7852 18.1275 16.5431 18.1467 16.3458 18.2642C16.1841 18.3604 16.0427 18.5281 15.922 18.7464C15.9817 18.7133 16.0448 18.687 16.1114 18.6687C16.2516 18.6302 16.4017 18.6289 16.5609 18.6689L16.5318 18.6185M15.8303 18.9306C16.0477 18.7497 16.3137 18.6809 16.6341 18.7956C16.683 18.8131 16.7333 18.835 16.7849 18.8614C16.7852 18.8615 16.7856 18.8617 16.786 18.8619C16.7868 18.8624 16.7877 18.8628 16.7886 18.8633L16.7868 18.8602L29.9588 25.5511C30.4367 25.7941 30.5672 26.1856 30.4964 26.6235C30.4806 26.721 30.4549 26.8209 30.4207 26.9219C30.4827 26.8419 30.5398 26.7532 30.5922 26.6567C30.6224 26.6012 30.6511 26.5431 30.6783 26.4825C30.9602 25.849 30.9708 25.2246 30.3049 24.8845L17.1376 18.1951C16.48 17.8593 16.0337 18.2476 15.7485 18.8689C15.7449 18.8768 15.7413 18.8848 15.7377 18.8928C15.7028 18.9702 15.6737 19.0444 15.6491 19.12C15.7044 19.0493 15.7638 18.9864 15.8273 18.9331C15.8272 18.9332 15.8273 18.9331 15.8273 18.9331C15.8283 18.9323 15.8293 18.9314 15.8303 18.9306Z" fill="black" />
                                                    <path d="M20.9523 34.55C21.5834 35.643 21.2748 37.0043 20.2636 37.5881C19.2524 38.1719 17.9192 37.7585 17.2882 36.6655L3.7768 13.2631C3.14573 12.1701 3.4543 10.8088 4.46549 10.225C5.47667 9.64116 6.80985 10.0546 7.44093 11.1476L20.9523 34.55Z" fill="#25AAA5" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M20.1636 37.4149C21.0667 36.8935 21.3624 35.6603 20.7791 34.65L7.26772 11.2476C6.6844 10.2373 5.46856 9.87679 4.56549 10.3982C3.66241 10.9196 3.36669 12.1528 3.95001 13.1631L17.4614 36.5655C18.0447 37.5758 19.2605 37.9363 20.1636 37.4149ZM20.2636 37.5881C21.2748 37.0043 21.5834 35.643 20.9523 34.55L7.44093 11.1476C6.80985 10.0546 5.47667 9.64116 4.46549 10.225C3.4543 10.8088 3.14573 12.1701 3.7768 13.2631L17.2882 36.6655C17.9192 37.7585 19.2524 38.1719 20.2636 37.5881Z" fill="black" />
                                                    <path d="M4.46549 10.225C3.4543 10.8088 3.14573 12.1701 3.7768 13.2631L17.2882 36.6655C17.9192 37.7585 19.2524 38.1719 20.2636 37.5881L4.46549 10.225Z" fill="#006963" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M4.39796 10.508C3.62783 11.0781 3.40441 12.2181 3.95001 13.1631L17.4614 36.5655C18.007 37.5105 19.1059 37.887 19.9847 37.5051L4.39796 10.508ZM4.29733 10.3337C3.42179 10.9652 3.18218 12.2332 3.7768 13.2631L17.2882 36.6655C17.8828 37.6954 19.1007 38.1219 20.0854 37.6794C20.1457 37.6522 20.2052 37.6218 20.2636 37.5881L4.46549 10.225C4.40708 10.2587 4.35101 10.295 4.29733 10.3337Z" fill="black" />
                                                    <path d="M6.99576 12.4691C7.31484 13.0217 7.15895 13.7094 6.64768 14.0046C6.1364 14.2998 5.46289 14.091 5.14381 13.5383C4.82473 12.9856 4.98062 12.2979 5.49189 12.0027C6.00316 11.7076 6.67668 11.9164 6.99576 12.4691Z" fill="#F4F8FA" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M6.15784 13.1123C6.16512 13.0802 6.16353 13.0276 6.12973 12.9691C6.09594 12.9105 6.05116 12.8828 6.01972 12.8731C6.00438 12.8683 5.99497 12.8686 5.99222 12.8689C5.99213 12.8689 5.99205 12.8689 5.99197 12.8689C5.99192 12.869 5.99188 12.869 5.99182 12.8691C5.99022 12.8714 5.98528 12.8794 5.98173 12.895C5.97445 12.9271 5.97604 12.9798 6.00984 13.0383C6.04363 13.0968 6.08841 13.1245 6.11985 13.1343C6.13519 13.139 6.1446 13.1387 6.14735 13.1385C6.14744 13.1385 6.14752 13.1385 6.1476 13.1385C6.14765 13.1384 6.14769 13.1383 6.14774 13.1383C6.14935 13.136 6.15429 13.128 6.15784 13.1123ZM6.64768 14.0046C7.15895 13.7094 7.31484 13.0217 6.99576 12.4691C6.67668 11.9164 6.00316 11.7076 5.49189 12.0027C4.98062 12.2979 4.82473 12.9856 5.14381 13.5383C5.46289 14.091 6.1364 14.2998 6.64768 14.0046Z" fill="black" />
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_365_7384">
                                                        <rect width="19" height="34" fill="white" transform="translate(0 10.0276) rotate(-30)" />
                                                    </clipPath>
                                                </defs>
                                            </svg>
                                            <p>Barbier</p>
                                        </div>)}
                                    {(competences && competences[0] && competences[0].attributes.Coiffeur_Coiffeuse) && (
                                        <div className="item">
                                            <svg viewBox="0 0 24 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M8.34283 19.9192C6.49985 20.3434 5.34815 22.1822 5.77226 24.0251C6.19641 25.868 8.03522 27.0197 9.87807 26.5956C11.6765 26.1816 12.8159 24.4252 12.4809 22.6308L12.4486 22.4896C12.0271 20.6463 10.1859 19.4951 8.34283 19.9192ZM12.6867 22.2861L12.6919 22.2847L12.7244 22.4262C13.1833 24.4201 11.9372 26.4092 9.94092 26.8687C7.94712 27.3276 5.958 26.0816 5.49917 24.0879C5.04032 22.0941 6.2863 20.105 8.27998 19.6462C10.2262 19.1983 12.1709 20.3741 12.6867 22.2861Z" fill="#25A6A4" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M5.4504 24.0991C4.98535 22.0783 6.24816 20.0624 8.26872 19.5974C10.2248 19.1472 12.1795 20.3155 12.7216 22.225L12.7289 22.223L12.7731 22.415C13.2382 24.4358 11.9753 26.4517 9.9521 26.9174C7.93136 27.3824 5.91542 26.1196 5.4504 24.0991ZM12.6547 22.3464L12.6513 22.3473L12.6383 22.2991C12.1296 20.413 10.2111 19.253 8.29115 19.6948C6.32436 20.1475 5.0952 22.1098 5.54786 24.0766C6.00049 26.0434 7.9628 27.2726 9.92967 26.8199C11.8991 26.3666 13.1283 24.4043 12.6757 22.4374L12.6547 22.3464ZM8.354 19.9679C6.53791 20.3859 5.40303 22.1979 5.82095 24.0138C6.2389 25.8299 8.0509 26.9648 9.86682 26.5469C11.6387 26.139 12.7614 24.4087 12.4319 22.6409L12.3998 22.5007C11.9845 20.6844 10.1702 19.55 8.354 19.9679ZM5.7235 24.0362C5.29318 22.1664 6.46171 20.3008 8.33157 19.8705C10.2015 19.4401 12.0696 20.6081 12.4973 22.4784L12.53 22.6216C12.87 24.4423 11.7139 26.2243 9.88925 26.6443C8.01946 27.0746 6.15383 25.9061 5.7235 24.0362Z" fill="black" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M17.9053 17.3808C19.7269 16.8676 21.6172 17.9301 22.1325 19.7488L17.9053 17.3808ZM22.1325 19.7488C22.6457 21.5707 21.5837 23.4635 19.7645 23.976C17.9425 24.4893 16.0505 23.4298 15.5373 21.608C15.024 19.7861 16.0861 17.8933 17.9053 17.3808M17.8293 17.1111C19.8003 16.5558 21.8449 17.7056 22.4022 19.6726C22.9574 21.6435 21.8086 23.6912 19.8405 24.2457C17.8697 24.801 15.8228 23.6549 15.2675 21.684C14.7123 19.7131 15.8612 17.6656 17.8293 17.1111Z" fill="#006963" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M17.8157 17.0629C19.8134 16.5001 21.8856 17.6654 22.4503 19.659L22.4503 19.659C23.013 21.6565 21.8488 23.7318 19.8541 24.2938C17.8567 24.8565 15.7822 23.695 15.2194 21.6975C14.6567 19.7001 15.821 17.6249 17.8157 17.0629ZM22.3541 19.6862C21.8043 17.7456 19.7873 16.6114 17.8429 17.1592C15.9013 17.7062 14.7679 19.7261 15.3157 21.6704C15.8589 23.5986 17.8494 24.7266 19.7787 24.2108L19.7544 24.1244L19.8506 24.0973L19.875 24.1837C21.7871 23.6171 22.8972 21.6144 22.3541 19.6862ZM22.0844 19.7624C21.5766 17.9701 19.7138 16.9232 17.9189 17.4289C16.1262 17.9339 15.0797 19.7991 15.5854 21.5944C16.0912 23.3896 17.9556 24.4336 19.7509 23.9278C21.5435 23.4228 22.5901 21.5577 22.0844 19.7624ZM17.8917 17.3326C19.74 16.8119 21.6578 17.89 22.1806 19.7351L22.1806 19.7352C22.7014 21.5837 21.6238 23.5041 19.7781 24.0241C17.9296 24.5449 16.0099 23.47 15.4892 21.6215C14.9684 19.7731 16.046 17.8527 17.8917 17.3326Z" fill="black" />
                                                <path d="M19.8224 25.5908C18.2873 25.8165 16.8405 23.86 16.8405 23.86C16.9653 23.6873 18.1633 24.1844 18.334 24.3128C18.334 24.3128 18.0202 25.0148 19.8224 25.5908Z" fill="#006963" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M16.8405 23.86C16.8405 23.86 18.1292 25.6028 19.5647 25.6089C19.6502 25.6093 19.7362 25.6035 19.8224 25.5908C19.7378 25.5638 19.6578 25.5364 19.5822 25.5089C18.049 24.9504 18.334 24.3128 18.334 24.3128C18.1855 24.2011 17.2594 23.8103 16.9389 23.8243C16.8911 23.8264 16.8567 23.8376 16.8405 23.86ZM17.0222 23.9286C17.0602 23.9747 17.1082 24.0315 17.1653 24.0958C17.3226 24.2731 17.5478 24.5068 17.8197 24.7332C18.2214 25.0676 18.7125 25.3757 19.2305 25.4754C18.7063 25.2427 18.4427 24.9998 18.3164 24.7868C18.2331 24.6465 18.2116 24.5223 18.2132 24.4298C18.2136 24.4032 18.216 24.3795 18.2191 24.3591C18.1706 24.3323 18.0974 24.2961 18.0053 24.2549C17.8694 24.194 17.7023 24.1262 17.5368 24.0678C17.3704 24.0091 17.2094 23.9611 17.0845 23.9382C17.0618 23.9341 17.0411 23.9309 17.0222 23.9286Z" fill="black" />
                                                <path d="M14.3669 1.88832L9.62211 19.4991C9.60235 19.5769 9.60027 19.6558 9.60976 19.7345L11.0298 20.0212C11.0509 19.9808 11.0685 19.9383 11.082 19.8912L14.8265 2.01178C14.9212 1.66147 14.4616 1.53801 14.3669 1.88832Z" fill="#006963" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M14.73 1.98568C14.7477 1.9201 14.7376 1.87423 14.7209 1.84459C14.7036 1.81393 14.6748 1.79277 14.6418 1.78389C14.6088 1.77501 14.5731 1.7789 14.5426 1.79682C14.5131 1.81413 14.4812 1.84881 14.4635 1.91433M14.3669 1.88832L9.62211 19.4991C9.60235 19.5769 9.60027 19.6558 9.60976 19.7345L11.0298 20.0212C11.0509 19.9808 11.0685 19.9383 11.082 19.8912L14.8265 2.01178C14.9212 1.66147 14.4616 1.53801 14.3669 1.88832ZM14.73 1.98568L10.9849 19.867ZM10.9849 19.867C10.9809 19.8809 10.9764 19.8943 10.9715 19.9074L9.70431 19.6516C9.70391 19.608 9.70845 19.5656 9.71886 19.5244C9.71881 19.5246 9.71892 19.5241 9.71886 19.5244L14.4635 1.91433" fill="black" />
                                                <path d="M16.7284 17.838L4.33608 4.60152C4.08755 4.33448 3.74027 4.66252 3.98807 4.92686L15.6206 18.8572L16.7311 17.8372L16.7284 17.838Z" fill="#006963" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M16.5873 17.8336L15.6302 18.7126L4.06483 4.86276L4.06103 4.85847C4.01477 4.80912 4.00207 4.7638 4.00293 4.72945C4.00382 4.6939 4.01936 4.66136 4.04443 4.63779C4.06949 4.61424 4.10267 4.60096 4.13782 4.60243C4.1718 4.60386 4.21624 4.61954 4.26287 4.66964L16.5873 17.8336ZM16.7284 17.838L16.7311 17.8372L15.6206 18.8572L3.98807 4.92686C3.74027 4.66252 4.08755 4.33448 4.33608 4.60152L16.7284 17.838Z" fill="black" />
                                                <path d="M11.5868 12.3457L4.33608 4.60152C4.08755 4.33448 3.74027 4.66252 3.98807 4.92686L12.3025 14.8868L11.5875 12.3484L11.5868 12.3457Z" fill="#25A6A4" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M11.5875 12.3484L11.5868 12.3457L4.33608 4.60152C4.08755 4.33448 3.74027 4.66252 3.98807 4.92686L12.3025 14.8868L11.5875 12.3484ZM12.0794 14.4635L4.06484 4.86277L4.06103 4.85847C4.01477 4.80912 4.00207 4.7638 4.00293 4.72945C4.00382 4.6939 4.01936 4.66136 4.04443 4.63779C4.06949 4.61424 4.10267 4.60096 4.13782 4.60243C4.1718 4.60386 4.21624 4.61954 4.26287 4.66964L11.4971 12.3962L12.0794 14.4635Z" fill="black" />
                                                <path d="M11.5686 12.2749L9.62226 19.4981C9.6025 19.5759 9.60043 19.6548 9.60991 19.7335L11.03 20.0203C11.0511 19.9798 11.0687 19.9374 11.0822 19.8902L12.2027 14.5332L11.5651 12.2729L11.5686 12.2749Z" fill="#25A6A4" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M11.5672 12.2801L11.5686 12.2749L11.5651 12.2729L11.5672 12.2801L9.62226 19.4981C9.6025 19.5759 9.60043 19.6548 9.60991 19.7335L11.03 20.0203C11.0511 19.9798 11.0687 19.9374 11.0822 19.8902L12.2027 14.5332L11.5672 12.2801ZM11.5694 12.6563L9.71902 19.5234C9.7086 19.5646 9.70407 19.607 9.70446 19.6506L10.9716 19.9065C10.9765 19.8934 10.981 19.8799 10.9851 19.8661L12.0998 14.5368L11.5694 12.6563Z" fill="black" />
                                            </svg>

                                            <p>Coiffure</p>
                                        </div>)}
                                    {(competences && competences[0] && competences[0].attributes.prothesiste_ongulaire) && (
                                        <div className="item">
                                            <svg viewBox="0 0 27 26" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M21.6756 22.478C21.6756 22.478 21.5405 26.0091 22.2726 26.0091C23.0047 26.0091 22.7999 22.478 22.7999 22.478H21.6756Z" fill="#2D2A27" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M21.6756 22.478C21.6756 22.478 21.5405 26.0091 22.2726 26.0091C23.0047 26.0091 22.7999 22.478 22.7999 22.478H21.6756ZM22.5129 22.778H21.9684C21.9672 22.8514 21.9663 22.9366 21.9659 23.0309C21.9647 23.358 21.9707 23.7919 21.9989 24.224C22.0274 24.6602 22.0777 25.0772 22.1599 25.3784C22.1968 25.5137 22.2356 25.608 22.2707 25.6667C22.3036 25.6087 22.3395 25.5162 22.373 25.3838C22.4491 25.083 22.4912 24.6661 22.5111 24.2299C22.5308 23.7979 22.5282 23.3639 22.5205 23.0368C22.5182 22.94 22.5155 22.8528 22.5129 22.778ZM22.2321 25.7204C22.2321 25.7203 22.2326 25.7198 22.2338 25.719C22.2327 25.72 22.2321 25.7205 22.2321 25.7204ZM22.3085 25.7176C22.3099 25.7185 22.3106 25.7191 22.3106 25.7192C22.3106 25.7192 22.3099 25.7188 22.3085 25.7176Z" fill="black" />
                                                <path d="M19.0798 21.2435C19.0798 22.4906 17.5038 23.5 15.5567 23.5H4.603C2.65587 23.5 1.07983 22.4906 1.07983 21.2435L4.01799 14.7565C4.48512 13.638 5.59402 12.5 7.54115 12.5H12.911C14.8582 12.5 15.8972 13.5653 16.4342 14.7565L19.0755 21.2435H19.0798Z" fill="#006963" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M19.2798 21.0436V21.2436C19.2798 21.9585 18.8283 22.5774 18.1563 23.0079C17.4821 23.4397 16.5626 23.7 15.5567 23.7H4.60298C3.59707 23.7 2.67758 23.4397 2.00336 23.0079C1.33131 22.5774 0.879822 21.9585 0.879822 21.2436V21.2004L3.83458 14.6767C4.32777 13.4984 5.50105 12.3 7.54114 12.3H12.911C13.9234 12.3 14.7119 12.5778 15.3191 13.0199C15.9242 13.4605 16.3376 14.0557 16.6165 14.6743L16.6195 14.6811L19.21 21.0436H19.2798ZM4.01797 14.7565L1.07982 21.2436C1.07982 22.4906 2.65586 23.5 4.60298 23.5H15.5567C17.3985 23.5 18.9084 22.5968 19.0662 21.4436C19.0701 21.4149 19.0732 21.386 19.0755 21.357C19.0784 21.3194 19.0798 21.2816 19.0798 21.2436H19.0755L16.4342 14.7565C15.8972 13.5654 14.8581 12.5 12.911 12.5H7.54114C5.59401 12.5 4.48511 13.6381 4.01797 14.7565Z" fill="black" />
                                                <path d="M22.9037 22.809C22.9037 23.0341 22.6118 23.2158 22.2501 23.2158C21.8884 23.2158 21.5964 23.0341 21.5964 22.809V13.4444C21.5964 13.2193 21.8884 13.0376 22.2501 13.0376C22.6118 13.0376 22.9037 13.2193 22.9037 13.4444V22.809Z" fill="#889392" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M22.6037 22.7998C22.5993 22.8068 22.5866 22.8218 22.554 22.8421C22.4907 22.8815 22.3842 22.9158 22.2501 22.9158C22.116 22.9158 22.0095 22.8815 21.9461 22.8421C21.9136 22.8218 21.9009 22.8068 21.8964 22.7998V13.4535C21.9009 13.4466 21.9136 13.4316 21.9461 13.4113C22.0095 13.3719 22.116 13.3376 22.2501 13.3376C22.3842 13.3376 22.4907 13.3719 22.554 13.4113C22.5866 13.4316 22.5993 13.4466 22.6037 13.4535V22.7998ZM22.6058 22.7955C22.6059 22.7956 22.6057 22.7963 22.605 22.7977C22.6054 22.7962 22.6057 22.7955 22.6058 22.7955ZM22.6058 13.4578C22.6057 13.4578 22.6054 13.4571 22.605 13.4556C22.6057 13.457 22.6059 13.4578 22.6058 13.4578ZM21.8943 13.4578C21.8943 13.4578 21.8945 13.457 21.8952 13.4556C21.8948 13.4571 21.8944 13.4578 21.8943 13.4578ZM21.8943 22.7955C21.8944 22.7955 21.8948 22.7962 21.8952 22.7977C21.8945 22.7963 21.8943 22.7956 21.8943 22.7955ZM22.2501 23.2158C22.6118 23.2158 22.9037 23.0341 22.9037 22.809V13.4444C22.9037 13.2193 22.6118 13.0376 22.2501 13.0376C21.8884 13.0376 21.5964 13.2193 21.5964 13.4444V22.809C21.5964 23.0341 21.8884 23.2158 22.2501 23.2158Z" fill="black" />
                                                <path d="M25.741 15.4432C25.741 15.972 23.0959 15.9123 22.2461 15.9123C21.3964 15.9123 18.7556 15.9693 18.7556 15.4432L20.7079 1.45734C20.7079 0.928497 21.3964 0.5 22.2461 0.5C23.0959 0.5 23.7844 0.928497 23.7844 1.45734L25.741 15.4432Z" fill="#006963" />
                                                <path fill-rule="evenodd" clip-rule="evenodd" d="M26.041 15.4222V15.4431C26.041 15.6536 25.9047 15.7902 25.7913 15.8653C25.677 15.9409 25.5336 15.992 25.3908 16.0296C25.1009 16.106 24.7203 16.1495 24.3322 16.1753C23.6774 16.219 22.9465 16.2154 22.4818 16.2131C22.3926 16.2127 22.3133 16.2123 22.2461 16.2123C22.1809 16.2123 22.1043 16.2126 22.0184 16.213C21.5543 16.2152 20.8198 16.2185 20.1621 16.1743C19.7745 16.1483 19.3946 16.1047 19.1052 16.0285C18.9627 15.991 18.8195 15.94 18.7054 15.8646C18.5924 15.79 18.4556 15.6537 18.4556 15.4431V15.4223L20.4081 1.43446C20.4178 1.03947 20.6773 0.726318 20.9998 0.525603C21.3329 0.318319 21.7743 0.199951 22.2461 0.199951C22.718 0.199951 23.1594 0.318319 23.4924 0.525602C23.8149 0.726309 24.0744 1.03944 24.0841 1.43441L26.041 15.4222ZM23.7844 1.45729C23.7844 0.928448 23.0959 0.499951 22.2461 0.499951C21.3964 0.499951 20.7079 0.928448 20.7079 1.45729L18.7556 15.4431C18.7556 15.9278 20.9967 15.9176 22.0141 15.913C22.1011 15.9126 22.1792 15.9123 22.2461 15.9123C22.3152 15.9123 22.3961 15.9127 22.4865 15.9131C23.5083 15.9181 25.741 15.929 25.741 15.4431L23.7844 1.45729Z" fill="black" />
                                                <path d="M10.0798 12.5028H7.54272C5.59512 12.5028 4.48595 13.6405 4.0187 14.7587L1.07983 21.2441C1.07983 22.4909 2.65625 23.5 4.60385 23.5H10.0798V12.5V12.5028Z" fill="#25AAA5" />
                                                <path d="M22.2505 0.5C21.4007 0.5 20.7122 0.928497 20.7122 1.45734L18.7556 15.4432C18.7556 15.972 21.4007 15.9123 22.2461 15.9123V0.5H22.2505Z" fill="#25AAA5" />
                                            </svg>

                                            <p>Prothésiste ongulaire</p>
                                        </div>)}

                                    {(competences && competences[0] && competences[0].attributes.Estheticienne_Estheticien) && (

                                        <div className="item">
                                            <svg viewBox="0 0 31 38" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <g clip-path="url(#clip0_365_7416)">
                                                    <path d="M30.7576 25.8077C30.7576 32.5431 25.356 37.9999 18.6994 37.9999C12.0428 37.9999 6.64114 32.5431 6.64114 25.8077C6.64114 19.0723 12.0428 13.6155 18.6994 13.6155C25.356 13.6155 30.7576 19.0771 30.7576 25.8077Z" fill="#006963" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M18.6994 37.6999C25.1872 37.6999 30.4576 32.3805 30.4576 25.8077C30.4576 19.2397 25.1871 13.9155 18.6994 13.9155C12.2115 13.9155 6.94114 19.2349 6.94114 25.8077C6.94114 32.3805 12.2115 37.6999 18.6994 37.6999ZM18.6994 37.9999C25.356 37.9999 30.7576 32.5431 30.7576 25.8077C30.7576 19.0771 25.356 13.6155 18.6994 13.6155C12.0428 13.6155 6.64114 19.0723 6.64114 25.8077C6.64114 32.5431 12.0428 37.9999 18.6994 37.9999Z" fill="black" />
                                                    <path d="M29.1016 26.0497C29.233 20.2396 24.6813 15.4218 18.9351 15.289C13.1888 15.1561 8.42408 19.7584 8.29268 25.5685C8.16127 31.3786 12.713 36.1963 18.4592 36.3292C24.2054 36.4621 28.9702 31.8598 29.1016 26.0497Z" fill="#DCC899" />
                                                    <path d="M10.2343 34.4923L26.797 16.7757C24.6545 14.812 21.8153 13.6155 18.6946 13.6155C12.0332 13.6155 6.63635 19.0771 6.63635 25.8077C6.63635 29.2092 8.01539 32.2826 10.2343 34.4923Z" fill="#25AAA5" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M26.797 16.7757C26.7233 16.7081 26.6487 16.6414 26.5733 16.5757C24.4587 14.7311 21.7079 13.6155 18.6946 13.6155C12.0332 13.6155 6.63635 19.0771 6.63635 25.8077C6.63635 29.1005 7.92865 32.0858 10.0241 34.2778C10.0933 34.3502 10.1633 34.4217 10.2343 34.4923L26.797 16.7757ZM26.3683 16.795C24.3069 14.9999 21.6284 13.9155 18.6946 13.9155C12.2021 13.9155 6.93635 19.2396 6.93635 25.8077C6.93635 29.0144 8.19215 31.9212 10.2293 34.0583L26.3683 16.795Z" fill="black" />
                                                    <path d="M11.3699 33.2765L25.6566 17.9916C23.8147 16.3126 21.3715 15.2849 18.6946 15.2849C12.9494 15.2849 8.28738 19.9939 8.28738 25.8078C8.28738 28.7316 9.46601 31.3707 11.3699 33.2765Z" fill="#F5E5BB" />
                                                    <path d="M18.9618 19.2894C18.9618 20.3268 18.1315 21.1663 17.1056 21.1663C16.0797 21.1663 15.2494 20.3268 15.2494 19.2894C15.2494 18.2521 16.0797 17.4126 17.1056 17.4126C18.1315 17.4126 18.9618 18.2521 18.9618 19.2894Z" fill="#EB6B78" />
                                                    <path d="M23.1991 18.1942C23.1991 19.2316 22.3688 20.0711 21.3429 20.0711C20.317 20.0711 19.4867 19.2316 19.4867 18.1942C19.4867 17.1569 20.317 16.3174 21.3429 16.3174C22.3688 16.3174 23.1991 17.1569 23.1991 18.1942Z" fill="#FED000" />
                                                    <path d="M24.874 12.1922C24.874 18.9276 19.4771 24.3845 12.8158 24.3845C6.15442 24.3845 0.757568 18.9276 0.757568 12.1922C0.757568 5.45683 6.15919 0 12.8158 0C19.4724 0 24.874 5.46166 24.874 12.1922Z" fill="#006963" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M12.8158 24.0845C19.3083 24.0845 24.574 18.7651 24.574 12.1922C24.574 5.62421 19.3036 0.3 12.8158 0.3C6.32792 0.3 1.05757 5.61946 1.05757 12.1922C1.05757 18.7651 6.32322 24.0845 12.8158 24.0845ZM12.8158 24.3845C19.4771 24.3845 24.874 18.9276 24.874 12.1922C24.874 5.46166 19.4724 0 12.8158 0C6.15919 0 0.757568 5.45683 0.757568 12.1922C0.757568 18.9276 6.15442 24.3845 12.8158 24.3845Z" fill="black" />
                                                    <path d="M4.35547 20.8817L20.9182 3.16023C18.7757 1.19655 15.9365 0 12.8158 0C6.15919 0 0.757568 5.46166 0.757568 12.1922C0.757568 15.5937 2.1366 18.6671 4.35547 20.8768V20.8817Z" fill="#25AAA5" />
                                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M4.35547 20.8817V20.8768C4.28533 20.807 4.21604 20.7363 4.1476 20.6647C2.0508 18.4725 0.757568 15.4862 0.757568 12.1922C0.757568 5.46166 6.15919 0 12.8158 0C15.8291 0 18.5799 1.1156 20.6945 2.96021C20.7699 3.02597 20.8445 3.09265 20.9182 3.16023L4.35547 20.8817ZM4.35277 20.4452L20.4896 3.17952C18.4282 1.38445 15.7497 0.3 12.8158 0.3C6.32799 0.3 1.05757 5.62421 1.05757 12.1922C1.05757 15.4001 2.31429 18.3079 4.35277 20.4452Z" fill="black" />
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_365_7416">
                                                        <rect width="30" height="38" fill="white" transform="translate(0.757568)" />
                                                    </clipPath>
                                                </defs>
                                            </svg>

                                            <p>Esthéticiennes / Eestheticiens</p>
                                        </div>)}
                                </div>
                                <div>
                                    <button className='btn-base'> <p>Modifier ou ajouter une compétence </p>  </button>
                                </div>
                            </div>
                            <div className="form-group">
                                <h5 htmlFor="nom">Liens</h5>
                                <div className='res'>
                                    <svg width="30" height="31" viewBox="0 0 30 31" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M30 15.5919C30 7.25666 23.2846 0.5 15.0019 0.5C6.71541 0.501875 0 7.25666 0 15.5937C0 23.1247 5.48556 29.3676 12.6547 30.5V19.9544H8.84889V15.5937H12.6584V12.266C12.6584 8.48463 14.8988 6.39614 18.324 6.39614C19.9663 6.39614 21.6817 6.69048 21.6817 6.69048V10.4025H19.79C17.9284 10.4025 17.3472 11.5667 17.3472 12.761V15.5919H21.5054L20.8418 19.9526H17.3453V30.4981C24.5144 29.3658 30 23.1228 30 15.5919Z" fill="black" />
                                    </svg>

                                    <input
                                        type="text"
                                        className="inputs"
                                        name="fb"
                                        value={formState.Reseaux.fb}
                                        onChange={handleInputChange}
                                        placeholder="Lien facebook"
                                    />
                                </div>
                                <div className='res'>
                                    <svg width="30" height="33" viewBox="0 0 30 33" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M15 0.922852C10.9294 0.922852 10.4175 0.942323 8.81812 1.01631C7.21875 1.0942 6.12937 1.35511 5.175 1.74064C4.17393 2.13166 3.26717 2.74501 2.51813 3.53783C1.75514 4.31608 1.16458 5.2576 0.7875 6.29689C0.41625 7.28602 0.163125 8.41925 0.09 10.0743C0.01875 11.7391 0 12.2687 0 16.5017C0 20.7309 0.01875 21.2605 0.09 22.9214C0.165 24.5803 0.41625 25.7116 0.7875 26.7027C1.17188 27.7268 1.68375 28.5953 2.51813 29.4617C3.35063 30.3282 4.18687 30.8617 5.17313 31.2589C6.12937 31.6444 7.21688 31.9073 8.81437 31.9832C10.4156 32.0572 10.9256 32.0767 15 32.0767C19.0744 32.0767 19.5825 32.0572 21.1838 31.9832C22.7794 31.9054 23.8725 31.6444 24.8269 31.2589C25.8273 30.8677 26.7334 30.2543 27.4819 29.4617C28.3162 28.5953 28.8281 27.7268 29.2125 26.7027C29.5819 25.7116 29.835 24.5803 29.91 22.9214C29.9812 21.2605 30 20.7309 30 16.4998C30 12.2687 29.9812 11.7391 29.91 10.0762C29.835 8.41925 29.5819 7.28602 29.2125 6.29689C28.8355 5.25757 28.2449 4.31604 27.4819 3.53783C26.7331 2.74472 25.8262 2.13132 24.825 1.74064C23.8687 1.35511 22.7775 1.09225 21.1819 1.01631C19.5806 0.942323 19.0725 0.922852 14.9963 0.922852H15.0019H15ZM13.6556 3.73059H15.0019C19.0069 3.73059 19.4812 3.74422 21.0619 3.82016C22.5244 3.88831 23.3194 4.14338 23.8481 4.35562C24.5475 4.63795 25.0481 4.97675 25.5731 5.52194C26.0981 6.06713 26.4225 6.58506 26.6944 7.31328C26.9006 7.86042 27.1444 8.686 27.21 10.2048C27.2831 11.8462 27.2981 12.3388 27.2981 16.4959C27.2981 20.653 27.2831 21.1475 27.21 22.789C27.1444 24.3077 26.8988 25.1313 26.6944 25.6804C26.4539 26.3568 26.07 26.9683 25.5712 27.4698C25.0462 28.015 24.5475 28.3519 23.8463 28.6342C23.3213 28.8484 22.5262 29.1015 21.0619 29.1716C19.4812 29.2456 19.0069 29.2631 15.0019 29.2631C10.9969 29.2631 10.5206 29.2456 8.94 29.1716C7.4775 29.1015 6.68437 28.8484 6.15562 28.6342C5.50406 28.3848 4.91461 27.9869 4.43062 27.4698C3.93141 26.9675 3.54698 26.3554 3.30562 25.6785C3.10125 25.1313 2.85563 24.3058 2.79 22.787C2.71875 21.1456 2.70375 20.653 2.70375 16.492C2.70375 12.3329 2.71875 11.8423 2.79 10.2009C2.8575 8.68211 3.10125 7.85653 3.3075 7.30744C3.57938 6.58117 3.90562 6.06129 4.43062 5.5161C4.95563 4.9709 5.45437 4.63405 6.15562 4.35172C6.68437 4.13754 7.4775 3.88441 8.94 3.81432C10.3238 3.74812 10.86 3.72865 13.6556 3.7267V3.73059ZM23.0081 6.31636C22.7717 6.31636 22.5377 6.36471 22.3193 6.45865C22.1009 6.55259 21.9025 6.69027 21.7353 6.86385C21.5682 7.03742 21.4356 7.24348 21.3451 7.47027C21.2547 7.69705 21.2081 7.94012 21.2081 8.18559C21.2081 8.43106 21.2547 8.67413 21.3451 8.90092C21.4356 9.1277 21.5682 9.33376 21.7353 9.50734C21.9025 9.68091 22.1009 9.8186 22.3193 9.91254C22.5377 10.0065 22.7717 10.0548 23.0081 10.0548C23.4855 10.0548 23.9434 9.85789 24.2809 9.50734C24.6185 9.15679 24.8081 8.68134 24.8081 8.18559C24.8081 7.68984 24.6185 7.2144 24.2809 6.86385C23.9434 6.5133 23.4855 6.31636 23.0081 6.31636ZM15.0019 8.50102C13.9801 8.48447 12.9654 8.67916 12.0168 9.07375C11.0682 9.46834 10.2047 10.055 9.47653 10.7994C8.74835 11.5439 8.17006 12.4314 7.77533 13.4102C7.3806 14.389 7.17731 15.4396 7.17731 16.5007C7.17731 17.5619 7.3806 18.6125 7.77533 19.5913C8.17006 20.5701 8.74835 21.4576 9.47653 22.2021C10.2047 22.9465 11.0682 23.5332 12.0168 23.9277C12.9654 24.3223 13.9801 24.517 15.0019 24.5005C17.0241 24.4677 18.9529 23.6105 20.3718 22.1138C21.7908 20.6171 22.5861 18.601 22.5861 16.5007C22.5861 14.4004 21.7908 12.3844 20.3718 10.8877C18.9529 9.39103 17.0241 8.53379 15.0019 8.50102ZM15.0019 11.3068C16.3281 11.3068 17.6001 11.8539 18.5379 12.8278C19.4757 13.8017 20.0025 15.1225 20.0025 16.4998C20.0025 17.877 19.4757 19.1979 18.5379 20.1717C17.6001 21.1456 16.3281 21.6927 15.0019 21.6927C13.6756 21.6927 12.4037 21.1456 11.4659 20.1717C10.5281 19.1979 10.0013 17.877 10.0013 16.4998C10.0013 15.1225 10.5281 13.8017 11.4659 12.8278C12.4037 11.8539 13.6756 11.3068 15.0019 11.3068Z" fill="black" />
                                    </svg>


                                    <input
                                        type="text"
                                        className="inputs"
                                        name="insta"
                                        value={formState.Reseaux.insta}
                                        onChange={handleInputChange}
                                        placeholder="Lien facebook"
                                    />
                                </div>
                                <div className='res'>
                                    <svg width="30" height="35" viewBox="0 0 30 35" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M17.1429 0.625H21.3857C21.6943 2.1332 22.5429 4.03586 24.0321 5.92375C25.4893 7.77367 27.4221 9.0625 30 9.0625V13.2812C26.2436 13.2812 23.4214 11.5642 21.4286 9.4232V23.8281C21.4286 25.9141 20.8002 27.9532 19.6229 29.6877C18.4456 31.4221 16.7722 32.7739 14.8145 33.5722C12.8567 34.3704 10.7024 34.5793 8.62404 34.1723C6.54567 33.7654 4.63657 32.7609 3.13815 31.2859C1.63973 29.8109 0.61929 27.9316 0.205877 25.8857C-0.207536 23.8398 0.00464233 21.7192 0.815581 19.792C1.62652 17.8648 2.9998 16.2176 4.76175 15.0587C6.52371 13.8998 8.5952 13.2812 10.7143 13.2812V17.5C9.44284 17.5 8.19994 17.8711 7.14277 18.5665C6.08559 19.2618 5.26163 20.2501 4.77506 21.4065C4.2885 22.5628 4.16119 23.8351 4.40924 25.0627C4.65729 26.2902 5.26955 27.4178 6.1686 28.3028C7.06766 29.1878 8.21312 29.7905 9.46014 30.0347C10.7072 30.2788 11.9997 30.1535 13.1744 29.6745C14.3491 29.1956 15.3531 28.3845 16.0595 27.3438C16.7658 26.3032 17.1429 25.0797 17.1429 23.8281V0.625Z" fill="black" />
                                    </svg>

                                    <input
                                        type="text"
                                        className="inputs"
                                        name="fb"
                                        value={formState.Reseaux.tiktok}
                                        onChange={handleInputChange}
                                        placeholder="Lien facebook"
                                    />
                                </div>
                            </div>

                        </div>
                        <div className="right">

                            <DropZone onDrop={(files) => handleImageDrop(files, "profil")} className="form-group drag">
                                <h5>Photo profil</h5>
                                <div className="flex-h">
                                    <img src={getImageUrl(formState?.profil?.data?.attributes?.url)} alt="" />
                                    <div className="action">
                                        <div>
                                            <ButtonInput txt="Modifier" onFileSelect={(e) => handleImageDrop(e, "profil")}></ButtonInput>

                                        </div>
                                    </div>
                                </div>

                            </DropZone>
                            <div className="galerie">

                                <h5>Gallerie et portefolio</h5>

                                <div>
                                    <DropZone onDrop={(files) => handleImageDrop(files, "photo1")} className="form-group drag">
                                        <div className="flex-h">
                                            <img src={getImageUrl(formState?.photo1?.data?.attributes?.url)} alt="" />
                                            <div className="action">
                                                <div className="">
                                                    <div>
                                                        <ButtonInput txt="Modifier" onFileSelect={(e) => handleImageDrop(e, "photo1")}></ButtonInput>
                                                    </div>
                                                </div>
                                                <svg viewBox="0 0 60 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <rect x="0.75" y="0.75" width="27.5" height="27.5" rx="1.25" fill="#006963" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="0.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="15.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="0.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="15.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                </svg>
                                            </div>
                                        </div>
                                    </DropZone>
                                    <DropZone onDrop={(files) => handleImageDrop(files, "photo2")} className="form-group drag">
                                        <div className="flex-h">
                                            <img src={getImageUrl(formState?.photo2?.data?.attributes?.url)} alt="" />
                                            <div className="action">
                                                <div className="">
                                                    <div>
                                                        <ButtonInput txt="Modifier" onFileSelect={(e) => handleImageDrop(e, "photo2")}></ButtonInput>
                                                    </div>
                                                </div>
                                                <svg viewBox="0 0 60 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <rect x="0.75" y="0.75" width="27.5" height="27.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="0.75" width="12.5" height="12.5" rx="1.25" fill="#006963" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="15.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="0.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="15.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                </svg>

                                            </div>
                                        </div>
                                    </DropZone>
                                    <DropZone onDrop={(files) => handleImageDrop(files, "photo3")} className="form-group drag">
                                        <div className="flex-h">
                                            <img src={getImageUrl(formState?.photo3?.data?.attributes?.url)} alt="" />
                                            <div className="action">
                                                <div className="">
                                                    <div>
                                                        <ButtonInput txt="Modifier" onFileSelect={(e) => handleImageDrop(e, "photo3")}></ButtonInput>
                                                    </div>
                                                </div>
                                                <svg viewBox="0 0 60 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <rect x="0.75" y="0.75" width="27.5" height="27.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="0.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="15.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="0.75" width="12.5" height="12.5" rx="1.25" fill="#006963" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="15.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                </svg>

                                            </div>
                                        </div>
                                    </DropZone>
                                    <DropZone onDrop={(files) => handleImageDrop(files, "photo4")} className="form-group drag">
                                        <div className="flex-h">
                                            <img src={getImageUrl(formState?.photo4.data?.attributes?.url)} alt="" />
                                            <div className="action">
                                                <div className="">
                                                    <div>
                                                        <ButtonInput txt="Modifier" onFileSelect={(e) => handleImageDrop(e, "photo4")}></ButtonInput>
                                                    </div>
                                                </div>
                                                <svg viewBox="0 0 60 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <rect x="0.75" y="0.75" width="27.5" height="27.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="0.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="15.75" width="12.5" height="12.5" rx="1.25" fill="#006963" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="0.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="15.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                </svg>

                                            </div>
                                        </div>
                                    </DropZone>
                                    <DropZone onDrop={(files) => handleImageDrop(files, "photo5")} className="form-group drag">
                                        <div className="flex-h">
                                            <img src={getImageUrl(formState?.photo5?.data?.attributes?.url)} alt="" />
                                            <div className="action">
                                                <div className="">
                                                    <div>
                                                        <ButtonInput txt="Modifier" onFileSelect={(e) => handleImageDrop(e, "photo5")}></ButtonInput>
                                                    </div>
                                                </div>
                                                <svg viewBox="0 0 60 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                    <rect x="0.75" y="0.75" width="27.5" height="27.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="0.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="30.75" y="15.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.8027" y="0.75" width="12.5" height="12.5" rx="1.25" stroke="#006963" stroke-width="1.5" />
                                                    <rect x="45.0527" y="15" width="14" height="14" rx="2" fill="#006963" />
                                                </svg>

                                            </div>
                                        </div>
                                    </DropZone>
                                </div>

                            </div>
                        </div>
                        <div className="actions">
                        <a className="btn-pro scnd" href={`/professionnel/${idPage}`} target="_blank" rel="noopener noreferrer"> <p>Voir ma page</p></a>
                            <button className={btnSave ? "btn-pro scnd " : "btn-pro scnd off"} onClick={() => handleRetour()} type='button'> <p>Annuler</p></button>
                            <button className={btnSave ? "btn-pro  " : "btn-pro off"} onClick={(e) => handleSubmit(e)} type='submit'> <p>Sauvegarder</p></button>
                        </div>

                    </form>
                    :
                    <Loader/>
                }

            </div>

        </div>
    );
};

export default MaPage;